package pages

import (
	"strconv"
	"pengoe/web/templates/layouts"
	"pengoe/web/templates/components"
	"pengoe/internal/services"
	"pengoe/internal/token"
)

type AccountProps struct {
	Title                string
	Description          string
	Accounts             []*services.Account
	ShowNewAccountButton bool
	Account              *services.Account
	Token                *token.Token
  Events               []*services.Event
}

templ Account(props AccountProps) {
	@layouts.Base(layouts.BaseProps{
		Title: props.Title,
		Description: props.Description,
	}) {
		<div hx-ext="description" id="page">
			@components.Leftpanel()
			<!-- content -->
			<main class="absolute z-0 min-h-screen w-full bg-white text-black">
				@components.Topbar(components.TopbarProps{
						SelectedAccountId: props.Account.Id,
						Accounts: props.Accounts,
						ShowNewAccountButton: props.ShowNewAccountButton,
					})
				<div class="flex flex-col items-center justify-center p-10">
					<h1 class="text-2xl font-semibold">{ props.Account.Name }</h1>
					<p>{ props.Account.Description }</p>
				</div>
				<div class="flex justify-center p-4">
					<button
 						hx-delete={ "/account/" + strconv.Itoa(props.Account.Id) }
 						hx-include="[name='csrf']"
 						hx-swap="none"
 						hx-confirm="Are you sure you want to delete this account?"
 						class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded"
					>
						Delete
					</button>
					<input
 						type="hidden"
 						name="csrf"
 						value={ props.Token.Value }
					/>
				</div>
        <div>events:</div>
        <ul>
          for _, event := range props.Events {
            <li>{ event.Name }</li>
          }
        </ul>

        @components.NewEventFormButton(components.NewEventFormButtonProps{
          AccountId: props.Account.Id,
        })
			</main>
			<!-- end of content -->
		</div>
	}
}
